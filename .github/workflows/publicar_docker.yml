name: CI/CD with SonarCloud and Docker
on:
  push:
    branches:
      - main
  create:
    tags:
      - 'v*'

jobs:
  # --- JOB 1: ANÁLISE DO SONARCLOUD ---
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Busca todo o histórico do Git para uma análise mais completa
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use a versão do Node.js do seu projeto
      
      - name: Install dependencies
        run: npm install

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Necessário para PRs
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # O token que você configurou nos segredos
        with:
          # Argumentos atualizados com as chaves do seu projeto
          args: >
            -Dsonar.projectKey=TonasP_Pokedex
            -Dsonar.organization=tonasp

  # --- JOB 2: BUILD E PUBLICAÇÃO DA IMAGEM ---
  build-and-push:
    name: Build and Publish Image
    # 'needs' garante que este job só rode se o job 'sonarcloud' for bem-sucedido
    needs: sonarcloud
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/pokedex

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Save Docker image to a file
        run: |
          echo "Salvando a imagem em pokedex-image.tar..."
          docker save -o pokedex-image.tar ${{ steps.meta.outputs.tags }}
      
      - name: Upload image as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: pokedex-docker-image
          path: pokedex-image.tar
